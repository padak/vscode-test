{
	"name": "keboola-data-engineering-booster",
	"displayName": "Keboola Data Engineering Booster",
	"description": "Comprehensive Keboola project management: explore storage, manage configurations across branches, and monitor job execution",
	"version": "4.0.0",
	"publisher": "keboola",
	"icon": "media/keboola_blue.png",
	"engines": {
		"vscode": "^1.74.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onView:keboolaExplorer"
	],
	"main": "./out/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "keboola-storage",
					"title": "Keboola Platform",
					"icon": "./media/keboola_blue.png"
				}
			]
		},
		"views": {
			"keboola-storage": [
				{
					"id": "keboolaExplorer",
					"name": "Storage Explorer",
					"when": "true"
				},
				{
					"id": "keboolaAgents",
					"name": "AI Agents",
					"when": "true"
				}
			]
		},
		"commands": [
			{
				"command": "keboola.settings",
				"title": "Settings",
				"icon": "$(settings-gear)"
			},
			{
				"command": "keboola.configure",
				"title": "Configure Connection",
				"icon": "$(gear)"
			},
			{
				"command": "keboola.refresh",
				"title": "Refresh",
				"icon": "$(refresh)"
			},
			{
				"command": "keboola.refreshConfigurations",
				"title": "Refresh Configurations",
				"icon": "$(refresh)"
			},
			{
				"command": "keboola.refreshProject",
				"title": "Refresh Project",
				"icon": "$(refresh)"
			},
			{
				"command": "keboola.setRowLimit",
				"title": "Set Row Limit",
				"icon": "$(settings-gear)"
			},
			{
				"command": "keboola.showTable",
				"title": "Show Table Details",
				"icon": "$(table)"
			},
			{
				"command": "keboola.showBucket",
				"title": "Show Bucket Details",
				"icon": "$(folder-opened)"
			},
			{
				"command": "keboola.showStage",
				"title": "Show Stage Details",
				"icon": "$(layers)"
			},
			{
				"command": "keboola.showBranch",
				"title": "Show Branch Details",
				"icon": "$(git-branch)"
			},
			{
				"command": "keboola.showConfiguration",
				"title": "Show Configuration",
				"icon": "$(file-code)"
			},
			{
				"command": "keboola.refreshJobs",
				"title": "Refresh Jobs",
				"icon": "$(refresh)"
			},
			{
				"command": "keboola.showJob",
				"title": "Show Job Details",
				"icon": "$(pulse)"
			},
			{
				"command": "keboola.showJobsForConfiguration",
				"title": "Show Jobs for This Configuration",
				"icon": "$(history)"
			},
			{
				"command": "keboola.watchTable",
				"title": "Watch This Table",
				"icon": "$(eye)"
			},
			{
				"command": "keboola.unwatchTable",
				"title": "Unwatch Table",
				"icon": "$(eye-closed)"
			},
			{
				"command": "keboola.agents.create",
				"title": "Create AI Agent",
				"icon": "$(add)"
			},
			{
				"command": "keboola.agents.createDemo",
				"title": "Create Demo Agent",
				"icon": "$(rocket)"
			},
			{
				"command": "keboola.agents.start",
				"title": "Start Agent",
				"icon": "$(play)"
			},
			{
				"command": "keboola.agents.pause",
				"title": "Pause Agent",
				"icon": "$(pause)"
			},
			{
				"command": "keboola.agents.resume",
				"title": "Resume Agent",
				"icon": "$(play)"
			},
			{
				"command": "keboola.agents.stop",
				"title": "Stop Agent",
				"icon": "$(stop)"
			},
			{
				"command": "keboola.agents.openDetail",
				"title": "Open Agent Detail",
				"icon": "$(info)"
			},
			{
				"command": "keboola.agents.openManifest",
				"title": "Open Agent Manifest",
				"icon": "$(file-code)"
			},
			{
				"command": "keboola.agents.exportReport",
				"title": "Export Agent Report",
				"icon": "$(export)"
			},
			{
				"command": "keboola.agents.hitl.approve",
				"title": "Approve HITL Request",
				"icon": "$(check)"
			},
			{
				"command": "keboola.agents.hitl.reject",
				"title": "Reject HITL Request",
				"icon": "$(x)"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "keboola.settings",
					"when": "view == keboolaExplorer",
					"group": "navigation@1"
				},
				{
					"command": "keboola.refresh",
					"when": "view == keboolaExplorer",
					"group": "navigation@2"
				},
				{
					"command": "keboola.agents.create",
					"when": "view == keboolaAgents",
					"group": "navigation@1"
				}
			],
			"view/item/context": [
				{
					"command": "keboola.showTable",
					"when": "view == keboolaExplorer && viewItem == table",
					"group": "inline"
				},
				{
					"command": "keboola.showBucket",
					"when": "view == keboolaExplorer && viewItem == bucket",
					"group": "inline"
				},
				{
					"command": "keboola.showStage",
					"when": "view == keboolaExplorer && viewItem == stage",
					"group": "inline"
				},
				{
					"command": "keboola.showBranch",
					"when": "view == keboolaExplorer && viewItem == branch",
					"group": "inline"
				},
				{
					"command": "keboola.showConfiguration",
					"when": "view == keboolaExplorer && viewItem == configuration",
					"group": "inline"
				},
				{
					"command": "keboola.refreshConfigurations",
					"when": "view == keboolaExplorer && viewItem == configurations",
					"group": "inline"
				},
				{
					"command": "keboola.refreshJobs",
					"when": "view == keboolaExplorer && viewItem == jobs",
					"group": "inline"
				},
				{
					"command": "keboola.showJob",
					"when": "view == keboolaExplorer && viewItem == job",
					"group": "inline"
				},
				{
					"command": "keboola.showJobsForConfiguration",
					"when": "view == keboolaExplorer && viewItem == configuration",
					"group": "inline"
				},
				{
					"command": "keboola.watchTable",
					"when": "view == keboolaExplorer && viewItem == table",
					"group": "table-watch"
				},
				{
					"command": "keboola.unwatchTable",
					"when": "view == keboolaExplorer && viewItem == table",
					"group": "table-watch"
				},
				{
					"command": "keboola.unwatchTable",
					"when": "view == keboolaExplorer && viewItem == watchedTable",
					"group": "inline"
				},
				{
					"command": "keboola.refreshProject",
					"when": "view == keboolaExplorer && viewItem == keboolaProject",
					"group": "inline"
				},
				{
					"command": "keboola.agents.create",
					"when": "view == keboolaAgents",
					"group": "navigation@1"
				},
				{
					"command": "keboola.agents.start",
					"when": "view == keboolaAgents && viewItem == agent",
					"group": "inline"
				},
				{
					"command": "keboola.agents.pause",
					"when": "view == keboolaAgents && viewItem == agent",
					"group": "inline"
				},
				{
					"command": "keboola.agents.resume",
					"when": "view == keboolaAgents && viewItem == agent",
					"group": "inline"
				},
				{
					"command": "keboola.agents.stop",
					"when": "view == keboolaAgents && viewItem == agent",
					"group": "inline"
				},
				{
					"command": "keboola.agents.openDetail",
					"when": "view == keboolaAgents && viewItem == agent",
					"group": "inline"
				},
				{
					"command": "keboola.agents.openManifest",
					"when": "view == keboolaAgents && viewItem == agent",
					"group": "inline"
				},
				{
					"command": "keboola.agents.exportReport",
					"when": "view == keboolaAgents && viewItem == agent",
					"group": "inline"
				},
				{
					"command": "keboola.agents.hitl.approve",
					"when": "view == keboolaAgents && viewItem == agent",
					"group": "hitl"
				},
				{
					"command": "keboola.agents.hitl.reject",
					"when": "view == keboolaAgents && viewItem == agent",
					"group": "hitl"
				}
			],
			"commandPalette": [
				{
					"command": "keboola.settings",
					"title": "Keboola: Settings"
				},
				{
					"command": "keboola.configure",
					"title": "Keboola: Configure Connection"
				},
				{
					"command": "keboola.setRowLimit",
					"title": "Keboola: Set Row Limit"
				},
				{
					"command": "keboola.refresh",
					"title": "Keboola: Refresh Storage"
				},
				{
					"command": "keboola.refreshConfigurations",
					"title": "Keboola: Refresh Configurations"
				},
				{
					"command": "keboola.refreshProject",
					"title": "Keboola: Refresh Project"
				},
				{
					"command": "keboola.showStage",
					"title": "Keboola: Show Stage Details"
				},
				{
					"command": "keboola.showBranch",
					"title": "Keboola: Show Branch Details"
				},
				{
					"command": "keboola.showConfiguration",
					"title": "Keboola: Show Configuration"
				},
				{
					"command": "keboola.refreshJobs",
					"title": "Keboola: Refresh Jobs"
				},
				{
					"command": "keboola.showJob",
					"title": "Keboola: Show Job Details"
				},
				{
					"command": "keboola.showJobsForConfiguration",
					"title": "Keboola: Show Jobs for Configuration"
				},
				{
					"command": "keboola.watchTable",
					"title": "Keboola: Watch Table"
				},
							{
				"command": "keboola.unwatchTable",
				"title": "Keboola: Unwatch Table"
			},
			{
				"command": "keboola.agents.create",
				"title": "Keboola: Create AI Agent"
			},
			{
				"command": "keboola.agents.start",
				"title": "Keboola: Start Agent"
			},
			{
				"command": "keboola.agents.pause",
				"title": "Keboola: Pause Agent"
			},
			{
				"command": "keboola.agents.resume",
				"title": "Keboola: Resume Agent"
			},
			{
				"command": "keboola.agents.stop",
				"title": "Keboola: Stop Agent"
			},
			{
				"command": "keboola.agents.openDetail",
				"title": "Keboola: Open Agent Detail"
			},
			{
				"command": "keboola.agents.openManifest",
				"title": "Keboola: Open Agent Manifest"
			},
			{
				"command": "keboola.agents.exportReport",
				"title": "Keboola: Export Agent Report"
			},
			{
				"command": "keboola.agents.hitl.approve",
				"title": "Keboola: Approve HITL Request"
			},
			{
				"command": "keboola.agents.hitl.reject",
				"title": "Keboola: Reject HITL Request"
			},
			{
				"command": "keboola.agents.createDemo",
				"title": "Keboola: Create Demo Agent"
			}
			]
		},
		"configuration": {
			"title": "Keboola",
			"properties": {
				"keboola.apiUrl": {
					"type": "string",
					"default": "",
					"description": "Keboola API URL"
				},
				"keboola.token": {
					"type": "string",
					"default": "",
					"description": "Keboola Storage API Token"
				},
				"keboola.agents.defaultModel": {
					"type": "string",
					"default": "gpt-4o-mini",
					"description": "Default LLM model for AI agents"
				},
				"keboola.agents.defaultBudgetUSD": {
					"type": "number",
					"default": 10.0,
					"description": "Default budget in USD for AI agents"
				},
				"keboola.agents.defaultTokenBudget": {
					"type": "number",
					"default": 10000,
					"description": "Default token budget for AI agents (0 = unlimited)"
				},
				"keboola.agents.defaultTimeLimitSec": {
					"type": "number",
					"default": 3600,
					"description": "Default time limit in seconds for AI agents"
				},
				"keboola.agents.allowedLLMs": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": ["gpt-4o-mini", "gpt-4o", "claude-3-haiku", "claude-3-sonnet"],
					"description": "Allowed LLM models for AI agents"
				},
				"keboola.agents.allowedTools": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": ["QueryStorage", "AnalyzeData", "GenerateReport"],
					"description": "Allowed MCP tools for AI agents"
				},
				"keboola.agents.contactPolicy": {
					"type": "string",
					"enum": ["notify", "notify_modal", "log_only"],
					"default": "notify",
					"description": "Contact policy for AI agents"
				},
				"keboola.agents.hitlTimeoutSec": {
					"type": "number",
					"default": 300,
					"description": "HITL timeout in seconds"
				},
				"keboola.agents.hitlFallback": {
					"type": "string",
					"enum": ["pause", "continue_safe", "stop"],
					"default": "pause",
					"description": "HITL fallback action"
				},
				"keboola.agents.exportTracesToFile": {
					"type": "boolean",
					"default": true,
					"description": "Export traces to file"
				},
				"keboola.agents.dataDir": {
					"type": "string",
					"default": ".keboola_agents",
					"description": "Data directory for AI agents"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"package": "npm run compile && vsce package --out builds/"
	},
	"devDependencies": {
		"@types/node": "16.x",
		"@types/node-fetch": "^2.6.2",
		"@types/vscode": "^1.74.0",
		"typescript": "^4.9.4"
	},
	"dependencies": {
		"node-fetch": "^2.7.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/padak/vscode-test.git"
	}
}
